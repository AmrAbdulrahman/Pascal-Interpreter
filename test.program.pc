program Main {
  var x, c, s, cs: real;

  procedure square(n : integer) {
     var res : integer;
     var real1 : integer;
     res := n * n;
     return res;
  }

  if (1 less than 2 AND 10 equals 10 OR false) {
    print('ooooh god!!');
  } otherwise {
    print('null works!')
  }

  procedure factorial(n : integer) {
    if (n) {
      return n * factorial(n - 1);
    }

    return 1;
  }


  // return expression on the fly
  // procedure cube(n : integer);
  // begin
  //  return n * n * n;
  // end;

  // function that calls a function
  // procedure compose(n : integer);
  // begin
  //  return square(n) + cube(n);
  // end;

  if (0)
    print('true amr hehe :D');
  else if (1)
    print('else if works!');
  otherwise
    print('false value found!');


  x := 2;
  // c := cube(x);
  s := square(x);
  //cs := compose(x);

  // argument as expression => function invokation
  // print('x =>', x, ' | sqr =>', s, ' | cube =>', c, ' | compose() =>', compose(x));
  // print('single quoted string');
  // print("double quoted string");
  // print("string with special \n\'\" characters");
  // print(conditionalProcedure(1));

  // print('ss', s);

  return factorial(4);
}
